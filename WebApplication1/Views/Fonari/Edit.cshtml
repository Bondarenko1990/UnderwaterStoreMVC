@model WebApplication1.Domain.Core.Fonari

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel">
    <div class="panel-heading">
        <h3>Редактирование товара «@Model.Name»</h3>
    </div>

    @using (Html.BeginForm("Edit", "Fonari",
       FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("BrandId", ViewBag.Brands as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-md-6", rows = 5 } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeLamp, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeLamp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeLamp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeBattery, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.TypeBattery, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeBattery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Svet, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Svet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Svet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeWork, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeWork, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeWork, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantityBattery, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.QuantityBattery, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuantityBattery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxGlubina, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxGlubina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxGlubina, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*<div class="col-md-2">*@
            <div style="position:relative;">
                <label>Картинка</label>
                <a class='btn' href='javascript:;'>
                    Выберите файл...
                    <input type="file" name="Image" size="40"
                           style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                           onchange='$("#upload-file-info").html($(this).val());'>
                </a>
                <span class='label label-info' id="upload-file-info"></span>
            </div>
            @if (Model.ImageData == null)
        {
            <div class="form-control-static">Нет картинки</div>
    }
    else
    {
        <img class="img-thumbnail" width="150" height="150"
             src="@Url.Action("GetImage", "Fonari", new { Model.Id })" />
    }
        </div>
    </div>

        <div class="panel-footer">
            <input type="submit" value="Сохранить" class="btn btn-primary" />
            @Html.ActionLink("Отменить изменения и вернуться к списку", "Index", null, new
            {
                @class = "btn btn-default"
            })
        </div>
    }

</div>

